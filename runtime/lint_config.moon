return {
  whitelist_globals: {
    ["."]: {
      "COL_BABY_BLUE"
      "COL_BLACK"
      "COL_BLUE"
      "COL_DARKER_GRAY"
      "COL_DARK_GRAY"
      "COL_GOLD"
      "COL_GRAY"
      "COL_GREEN"
      "COL_INVISIBLE"
      "COL_LIGHT_BLUE"
      "COL_LIGHT_GRAY"
      "COL_LIGHT_RED"
      "COL_MEDIUM_PURPLE"
      "COL_MID_GRAY"
      "COL_MUTED_GREEN"
      "COL_MUTED_YELLOW"
      "COL_PALE_BLUE"
      "COL_PALE_GREEN"
      "COL_PALE_RED"
      "COL_PALE_YELLOW"
      "COL_RED"
      "COL_WHITE"
      "COL_YELLOW"
      "DEBUG_BOX_DRAW"
      "DEBUG_LAYOUTS"
      "Engine"
      "Fonts"
      "Game"
      "GameVar"
      "LEngine"
      "NULL"
      "OrderedDict"
      "TextInput"
      "_EMPTY_TABLE"
      "_G"
      "_VERSION"
      "__DEBUG_CHECKS"
      "__EMSCRIPTEN"
      "__LUAJIT"
      "__string_hash"
      "append"
      "appendf"
      "arg"
      "argv_configuration"
      "assert"
      "assertf"
      "b2"
      "bbox_contains"
      "bbox_create"
      "bbox_padded"
      "bitmap_draw"
      "bitmap_draw_wrapped"
      "bounds_percentage"
      "callable_once"
      "chance"
      "classes"
      "colfmt"
      "collectgarbage"
      "colprintf"
      "coroutine"
      "cpp_traceback"
      "deadprotect"
      "debug"
      "do_nothing"
      "dofile"
      "draw_colored_parts"
      "dup"
      "effects"
      "enemies"
      "enemy_berserker_init"
      "enemy_berserker_step"
      "enemy_init"
      "enemy_step"
      "ensure_item"
      "error"
      "errorf"
      "file_as_string"
      "file_dump_csv"
      "file_dump_json"
      "file_dump_string"
      "file_exists"
      "fmt"
      "font_cached_load"
      "func_apply_and"
      "func_apply_not"
      "func_apply_or"
      "func_apply_sequence"
      "gcinfo"
      "getfenv"
      "getmetatable"
      "image_cached_load"
      "input"
      "io"
      "ipairs"
      "is_position"
      "items"
      "iter_combine"
      "iterator_step"
      "lfs"
      "load"
      "loadfile"
      "loadstring"
      "log"
      "log_info"
      "log_verbose"
      "log_warn"
      "lpeg"
      "ltn12"
      "map_call"
      "math"
      "memoized"
      "mime"
      "module"
      "monster_sprite"
      "name_field_create"
      "newproxy"
      "newtype"
      "next"
      "nilprotect"
      "origin_aligned"
      "origin_valid"
      "os"
      "package"
      "pairs"
      "path_resolve"
      "pcall"
      "perf"
      "play_pained_sound"
      "play_sound"
      "player"
      "pretty"
      "pretty_print"
      "pretty_table_safe"
      "pretty_tostring"
      "pretty_tostring_compact"
      "print"
      "printf"
      "profile"
      "projectiles"
      "rand_range"
      "random"
      "random_choice"
      "random_gaussian"
      "random_resolve"
      "random_round"
      "random_seed"
      "random_subregion"
      "randomf"
      "rawequal"
      "rawget"
      "rawset"
      "require"
      "require_path_add"
      "select"
      "setfenv"
      "setmetatable"
      "settings"
      "socket"
      "spairs"
      "spell_choose_safest_square"
      "spell_choose_target"
      "spells"
      "screens"
      "sprites"
      "strictpairs"
      "string"
      "table"
      "text_button_create"
      "text_field_create"
      "timer_create"
      "toaddress"
      "tonumber"
      "tosprite"
      "tostring"
      "try"
      "type"
      "unpack"
      "values"
      "vector_add"
      "vector_apply"
      "vector_direction"
      "vector_distance"
      "vector_divide"
      "vector_interpolate"
      "vector_magnitude"
      "vector_max"
      "vector_min"
      "vector_multiply"
      "vector_normalize"
      "vector_scale"
      "vector_subtract"
      "vector_sum"
      "vector_to_direction"
      "virtual_path_create_relative"
      "with_alpha"
      "with_mutable_globals"
      "xpcall"
      "yield_point"
    }
  }
}
